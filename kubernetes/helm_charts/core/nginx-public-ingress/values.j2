#jinja2:lstrip_blocks: True

namespace: {{ namespace }}
merge_domain_status: {{ merge_domain_status | lower }}
service:
  type: {{ nginx_public_ingress_type | default('LoadBalancer') }}
  {% if nginx_public_ingress_ip is defined %}
  nginx_public_ingress_ip: {{ nginx_public_ingress_ip }}
  {% endif %}
  {% if nginx_public_ingress_annotations is defined %}
  annotations:
    {{ nginx_public_ingress_annotations | to_json }}
  {% endif %}
  ports:
  - port: 80
    name: http
    targetPort: 80
  - port: 443
    name: https
    targetPort: 443

{% if nginx_volumes is defined and nginx_volumes %}
{#
This is for custom nginx volume mount options in common.yaml
example:
nginx_volumes:
  volumes:
    - name: nginx-gcp-token
      configMap:
        name: nginx-gcp-token
  volumeMounts:
    - name: nginx-gcp-token
      mountPath: /etc/nginx/token
#}
{{ nginx_volumes | to_yaml }}
{% endif %}

imagepullsecrets: {{ imagepullsecrets }}
dockerhub: {{ dockerhub }}

resources:
  requests:
    cpu: {{proxy_cpu_req|default('100m')}}
    memory: {{proxy_mem_req|default('100Mi')}}
  limits:
    cpu: {{proxy_cpu_limit|default('1')}}
    memory: {{proxy_mem_limit|default('1024Mi')}}

repository: {{proxy_repository|default('proxy')}}
image_tag: {{ image_tag }}

proxyconfig: |-
  {% if proto=='https' %}
  server {
    listen 80;
    listen [::]:80;
    server_name portal.{{ nginx_proxy_server_name }};
    add_header Content-Security-Policy upgrade-insecure-requests;
    {#
    custom nginx server config section
    eg:
    nginx_server_config: |
      if ($allowed_country = no) {
          return 444;
      }
    #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=4, indentfirst=True)  }}
{% endif %}


    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    #return 301 https://{{ nginx_proxy_server_name }}$request_uri;
  return 301 https://portal.{{ nginx_proxy_server_name }}$request_uri;
  #}
  }
  {% endif %}

  #server {
   # listen                3007;
   # server_name           _;

   # proxy_set_header    Host              $host;
   # proxy_set_header    X-Real-IP         $remote_addr;
   # proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
   # proxy_set_header    X-Forwarded-SSL   on;
   # proxy_set_header    X-Forwarded-Proto $scheme;

   # location /web-hosted/ {
   #   root   /content-mount/web-host;
   #   rewrite ^/web-hosted/(.*) /$1 break;
   #  }
   #}

  server {
  {% if proto=='http' %}
    listen                80;
    listen    [::]:80;
  {% else %}
    listen                443 ssl;
    ssl_certificate       /etc/secrets/site.crt;
    ssl_certificate_key   /etc/secrets/site.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
  {% endif  %}
    server_name *.portal.{{ nginx_proxy_server_name }} portal.{{ nginx_proxy_server_name }};
    {#
    custom nginx server config section
    eg:
    nginx_server_config: |
      if ($allowed_country = no) {
          return 444;
      }
    #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=6, indentfirst=True)  }}
{% endif %}
    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header    X-Forwarded-SSL   on;
    proxy_set_header    X-Forwarded-Proto $scheme;

    #add_header Content-Security-Policy "frame-ancestors 'self'; frame-src *.youtube.com *.igot-stage.in *.{{ nginx_proxy_server_name }};";

    ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
    resolver {{ kube_dns_ip }} valid=30s;

    location /apis/protected/v8/user/telemetry {
      return 200 'telemetry disabled on dev';
    }
    location ~* ^/auth/(.*)/impersonation {
      return 301 {{proto}}://portal.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/master {
      return 301 {{proto}}://portal.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://portal.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/(.+)/token/introspect/ {
          return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
    }
    location ~* ^/auth/realms/(.+)/token/ {
      return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
    }
    location ~* ^/auth/realms/(.+)/userinfo/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
    }
    location ~* ^/auth/realms/(.+)/logout/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
    }
    location ~* ^/auth/realms/(.+)/certs/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
    }
    location ~* ^/auth/realms/(.+)/clients-registrations/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://portal.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/v1/refresh/token  {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /auth/ {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
    }
    # Caching keycloak static assets
    location ~ /auth/resources/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css)) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache proxy_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
  }
    # This is Caching mechanism for POST requests location search
    location ~ /learner/data/v1/location/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-static;
    }
    # Caching for content consumption
    location ~ /api/(content/v1/read|course/v1/hierarchy) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for Content search
    location ~ /api/content/v1/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for POST requests
    location ~ /api/org/v1/search|/api/data/v1/(form/read|location/search) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ /api/(framework/v1/read|data/v1/system/settings/get) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
  }

  # This is Caching mechanism for Content search
  location ~ /api/discussion/recent {
    # Enabling caching
    proxy_cache_key "$request_uri|$request_body";
    proxy_cache content_cache;
    add_header X-Proxy-Cache $upstream_cache_status;
    add_header X-Proxy-Cache-Date $upstream_http_date;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    proxy_cache_methods GET HEAD POST;
    proxy_cache_revalidate on;
    proxy_cache_background_update on;
    proxy_cache_lock on;
    proxy_cache_valid 200 14400s;
    # Increasing the proxy buffer size
    proxy_buffer_size 16k;
    proxy_busy_buffers_size 16k;
    rewrite ^/api/(.*) /$1 break;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_connect_timeout 5;
    proxy_send_timeout 60;
    proxy_read_timeout 70;
    proxy_http_version 1.1;
    proxy_pass http://kong;
  }

    location ~ /apis/proxies/v8/competency/v4/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache ratings_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://ui-proxies:3003;
    }

    location ~ /apis/proxies/v8/trending/content/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache ratings_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://ui-proxies:3003;
    }

    location ~ /api/trending/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache ratings_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }

    location ~ /apis/protected/v8/portal/listDeptNames {
      # Enabling caching
      proxy_cache_key "$request_uri";
      proxy_cache ratings_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://ui-proxies:3003;
    }

    location ~ /apis/proxies/v8/user/v1/positions {
      # Enabling caching
      proxy_cache_key "$request_uri";
      proxy_cache ratings_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://ui-proxies:3003;
    }

    location /api/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, x-authenticated-user-token, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      set $custom_header "";
      if ( $arg_eHVyhwSdt ) {
        set $custom_header "Bearer $arg_eHVyhwSdt";
      }
      if ( $http_authorization ) {
        set $custom_header "$http_authorization";
      }
      proxy_set_header Authorization $custom_header;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      client_max_body_size 1226M;
    }

    location /apis/ {
      # if ($request_method = OPTIONS ) {
       #       add_header Access-Control-Allow-Origin "*" ;
       #       add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
       #       add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
        #      add_header Content-Length 0;
        #      add_header Content-Type text/plain;
        #      return 200;
      #}
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/apis/(.*) /$1 break;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /pdf-processing/ {
      # if ($request_method = OPTIONS ) {
       #       add_header Access-Control-Allow-Origin "*" ;
       #       add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
       #       add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
        #      add_header Content-Length 0;
        #      add_header Content-Type text/plain;
        #      return 200;
      #}
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST, PUT";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/pdf-processing/(.*) /$1 break;
      proxy_pass http://192.168.3.103:5000;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /testpdf/ {
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST, PUT";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/testpdf/(.*) /$1 break;
      proxy_pass http://192.168.3.103:3000;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /gen-model/ {
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/gen-model/(.*) /$1 break;
      proxy_pass http://192.168.3.103:11434;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /migration/v1/missionninty {
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      return 301 {{ missionninty_url }};
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }
    
    location /mligot/ {
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Scheme $scheme;
     proxy_connect_timeout 5;
     proxy_send_timeout 60;
     proxy_read_timeout 70;
     proxy_set_header    X-Forwarded-Proto $scheme;
     proxy_set_header Connection "";
     proxy_http_version 1.1;
     proxy_set_header X-Request-ID $sb_request_id;
     rewrite ^/mligot/(.*) /$1 break;
     proxy_pass http://ml-kb-portal-service;
    }

    location /mentorship/ {
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Scheme $scheme;
     proxy_connect_timeout 5;
     proxy_send_timeout 60;
     proxy_read_timeout 70;
     proxy_set_header    X-Forwarded-Proto $scheme;
     proxy_set_header Connection "";
     proxy_http_version 1.1;
     proxy_set_header X-Request-ID $sb_request_id;
     rewrite ^/mentorship/(.*) /$1 break;
     proxy_pass http://mentoring-portal:7601;
    }

    location /validation/ {
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Scheme $scheme;
     proxy_connect_timeout 5;
     proxy_send_timeout 60;
     proxy_read_timeout 70;
     proxy_set_header    X-Forwarded-Proto $scheme;
     proxy_set_header Connection "";
     proxy_http_version 1.1;
     proxy_set_header X-Request-ID $sb_request_id;
     rewrite ^/validation/(.*) /$1 break;
     proxy_pass http://ml-template-validation-portal-service:3111;
    }

    location ~ /api/ratings/v1/read {
      # Enabling caching
      proxy_cache_key "$request_uri";
      proxy_cache ratings_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }

    location ~ /apis/public/v8/playlist/landingpage {
      # Enabling caching
      proxy_cache_key "$request_uri";
      proxy_cache ratings_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 7200s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://ui-proxies:3003;
    }

    location /api/cloud-services/mlcore/v1/files/upload {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST, PUT";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, x-authenticated-user-token, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      set $custom_header "";
      if ( $arg_eHVyhwSdt ) {
        set $custom_header "Bearer $arg_eHVyhwSdt";
      }
      if ( $http_authorization ) {
        set $custom_header "$http_authorization";
      }
      proxy_set_header Authorization $custom_header;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      client_max_body_size 1226M;
    }

    location ~ apis/proxies/v8/ratings/v1/read {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://ui-proxies:3003;
    }

    location /protected/v8/resource/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /apis/public/v8/course/batch/cert/download/mobile {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_pass http://pdf-generator-service:3000;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /apis/public/v8/cert/download/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      rewrite ^/apis/(.*) /$1 break;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_pass http://pdf-generator-service:3000;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    # Oauth2 config
    location /oauth2/ {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host                    $host;
      proxy_set_header X-Real-IP               {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme                $scheme;
      proxy_set_header X-Auth-Request-Redirect $request_uri;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location = /oauth2/auth {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host             $host;
      proxy_set_header X-Real-IP        {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme         $scheme;
      # nginx auth_request includes headers but not body
      proxy_set_header Content-Length   "";
      proxy_pass_request_body           off;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location /grafana/ {
      set $target http://prometheus-operator-grafana.monitoring.svc.cluster.local;
      rewrite ^/grafana/(.*) /$1 break;
      proxy_pass $target;
      }
    location /encryption/ {
    set $target http://encryption.{{ namespace }}.svc.cluster.local;
    rewrite ^/encryption/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 40;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Forwarded-For   $http_x_forwarded_for;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass $target;
    }
    location /badging/ {
      set $target http://badger-service.{{ namespace }}.svc.cluster.local:8004;
      rewrite ^/badging/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 1;
      proxy_send_timeout 30;
      proxy_read_timeout 40;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
  }
    location /discussions/ {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      # Socket.IO Support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      set $target http://nodebb-service.{{ namespace }}.svc.cluster.local:4567;
      #rewrite ^/discussions/(.*) /$1 break;
      proxy_pass $target;
  }
   location ~* ^/content/preview/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/v3/preview/$url_full;
  }
   location ~ /content-editor/telemetry|collection-editor/telemetry {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-static;
    }
  location ~* ^/content-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/content-editor/$url_full;
  }
    location ~* ^/collection-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/collection-editor/$url_full;
  }
    location ~* ^/generic-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/generic-editor/$url_full;
  }
  location ~* ^/content-plugins/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $s3_bucket        "{{plugin_upstream_url}}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
        {% if nginx_token_refresh is defined and nginx_token_refresh %}
        access_by_lua_block {
            local dict = ngx.shared.token_cache
            local token = dict:get("gcp_token")

            if token then
                ngx.req.set_header("Authorization", "Bearer " .. token)
            else
                ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
            end
        }
        {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$s3_bucket/content-plugins/$url_full;
  }
    location /thirdparty {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-static;
    }
  location ~* ^/desktop/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $offline_bucket        "{{ sunbird_offline_azure_storage_account_url }}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{sunbird_offline_azure_storage_account_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$offline_bucket/$url_full;
  }
    # compression for svg certs download
    location /api/certreg/v2/certs/download {
      rewrite ^/api/(.*) /$1 break;
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   $remote_addr;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /learner/certreg/v2/certs/download {
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-static;
    }
    location / {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      add_header Content-Security-Policy "frame-ancestors *;";
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-static;
    }
    location /imagegen/ {
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/imagegen/(.*) /$1 break;
      proxy_pass http://thumbnail-generation-service:8000;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /tktdashboard/ {
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/tktdashboard/(.*) /$1 break;
      proxy_pass http://10.175.2.49:7003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 750;
    }
    
    location /v3/device/register {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/v3/device/register/(.*) /v3/device/register/$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
    }
    location /action/data/v3/metrics {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/action/data/v3/metrics/(.*) /data/v3/metrics/$1 break;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
    }
    location  ~ /resourcebundles/v1/read|/learner/data/v1/(role/read|system/settings/get)|/v1/tenant/info  {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-static;
    }
    location /api/channel/v1/read {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/channel/v1/read/(.*) /channel/v1/read/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ ^/chatapi/ {
      set $target http://router-service.{{ namespace }}.svc.cluster.local:8000;
      rewrite ^/chatapi/(.*) /$1 break;
      proxy_pass $target;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
    }
    location /oauth2callback {
      return 200 'OK';
      add_header Content-Type text/plain;
    }
{% if searchbycompetencyapi_response_json is defined %}
    location /apis/proxies/v8/searchBy/competency {
      alias /var/www/html/;
      index SearchByCompetencyAPI-Response.json;
    }
{% endif %}
{% if searchbycompetencyapi_response_json is defined %}
    location /api/searchBy/competency {
      alias /var/www/html/;
      index SearchByCompetencyAPI-Response.json;
    }
{% endif %}
    {# Including custom configuration #}
    {{ proxy_custom_config }}

    client_max_body_size 1226M;
    }


  server {
    if ($host = cbp.{{ nginx_proxy_server_name }}) {
        return 301 https://$host$request_uri;
        }

      listen       80;
      server_name  cbp.{{ nginx_proxy_server_name }};
      return 404;
    }

   server {
    listen                443 ssl;
    ssl_certificate       /etc/secrets/site.crt;
    ssl_certificate_key   /etc/secrets/site.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    server_name *.cbp.{{ nginx_proxy_server_name }} cbp.{{ nginx_proxy_server_name }};
    {#
    custom nginx server config section
    eg:
    nginx_server_config: |
      if ($allowed_country = no) {
          return 444;
      }
    #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=6, indentfirst=True)  }}
{% endif %}
    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header    X-Forwarded-SSL   on;
    proxy_set_header    X-Forwarded-Proto $scheme;
    ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
    resolver {{ kube_dns_ip }} valid=30s;
    location ~* ^/auth/(.*)/impersonation {
      return 301 {{proto}}://cbp.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/master {
      return 301 {{proto}}://cbp.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://cbp.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/(.+)/token/introspect/ {
          return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
    }
    location ~* ^/auth/realms/(.+)/token/ {
      return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
    }
    location ~* ^/auth/realms/(.+)/userinfo/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
    }
    location ~* ^/auth/realms/(.+)/logout/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
    }
    location ~* ^/auth/realms/(.+)/certs/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
    }
    location ~* ^/auth/realms/(.+)/clients-registrations/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://cbp.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/v1/refresh/token  {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /auth/ {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
    }
    # Caching keycloak static assets
    location ~ /auth/resources/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css)) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache proxy_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
  }
    # This is Caching mechanism for POST requests location search
    location ~ /learner/data/v1/location/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    # Caching for content consumption
    location ~ /api/(content/v1/read|course/v1/hierarchy) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for Content search
    location ~ /api/content/v1/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for POST requests
    location ~ /api/org/v1/search|/api/data/v1/(form/read|location/search) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ /api/(framework/v1/read|data/v1/system/settings/get) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
  }

    location /api/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      set $custom_header "";
      if ( $arg_eHVyhwSdt ) {
        set $custom_header "Bearer $arg_eHVyhwSdt";
      }
      if ( $http_authorization ) {
        set $custom_header "$http_authorization";
      }
      proxy_set_header Authorization $custom_header;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /apis/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/apis/(.*) /$1 break;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /protected/v8/resource/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Content-Security-Policy upgrade-insecure-requests;
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    # Oauth2 config
    location /oauth2/ {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host                    $host;
      proxy_set_header X-Real-IP               {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme                $scheme;
      proxy_set_header X-Auth-Request-Redirect $request_uri;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location = /oauth2/auth {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host             $host;
      proxy_set_header X-Real-IP        {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme         $scheme;
      # nginx auth_request includes headers but not body
      proxy_set_header Content-Length   "";
      proxy_pass_request_body           off;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location /grafana/ {
      set $target http://prometheus-operator-grafana.monitoring.svc.cluster.local;
      rewrite ^/grafana/(.*) /$1 break;
      proxy_pass $target;
    }
    location /encryption/ {
    set $target http://encryption.{{ namespace }}.svc.cluster.local;
    rewrite ^/encryption/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 40;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Forwarded-For   $http_x_forwarded_for;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass $target;
    }
    location /badging/ {
      set $target http://badger-service.{{ namespace }}.svc.cluster.local:8004;
      rewrite ^/badging/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 1;
      proxy_send_timeout 30;
      proxy_read_timeout 40;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
  }
    location /discussions/ {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      # Socket.IO Support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      set $target http://nodebb-service.{{ namespace }}.svc.cluster.local:4567;
      #rewrite ^/discussions/(.*) /$1 break;
      proxy_pass $target;
  }
   location ~* ^/content/preview/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/v3/preview/$url_full;
  }
   location ~ /content-editor/telemetry|collection-editor/telemetry {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
  location ~* ^/content-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/content-editor/$url_full;
  }
    location ~* ^/collection-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/collection-editor/$url_full;
  }
    location ~* ^/generic-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/generic-editor/$url_full;
  }
  location ~* ^/content-plugins/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $s3_bucket        "{{plugin_upstream_url}}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$s3_bucket/content-plugins/$url_full;
  }
    location /thirdparty {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
  location ~* ^/desktop/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $offline_bucket        "{{ sunbird_offline_azure_storage_account_url }}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{sunbird_offline_azure_storage_account_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$offline_bucket/$url_full;
  }
    # compression for svg certs download
    location /api/certreg/v2/certs/download {
      rewrite ^/api/(.*) /$1 break;
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   $remote_addr;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /learner/certreg/v2/certs/download {
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location / {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location /v3/device/register {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/v3/device/register/(.*) /v3/device/register/$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
    }
    location /action/data/v3/metrics {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/action/data/v3/metrics/(.*) /data/v3/metrics/$1 break;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
    }
    location  ~ /resourcebundles/v1/read|/learner/data/v1/(role/read|system/settings/get)|/v1/tenant/info  {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location /api/channel/v1/read {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/channel/v1/read/(.*) /channel/v1/read/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ ^/chatapi/ {
      set $target http://router-service.{{ namespace }}.svc.cluster.local:8000;
      rewrite ^/chatapi/(.*) /$1 break;
      proxy_pass $target;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
    }
    location /oauth2callback {
      return 200 'OK';
      add_header Content-Type text/plain;
    }
    {# Including custom configuration #}
    {{ proxy_custom_config }}

    client_max_body_size 1226M;

    }
  server {
    if ($host = {{ nginx_proxy_server_name }}) {
        return 301 https://$host$request_uri;
        }

      listen       80;
      server_name  {{ nginx_proxy_server_name }};
      return 404;
    }

   server {
    listen                443 ssl;
    ssl_certificate       /etc/secrets/site.crt;
    ssl_certificate_key   /etc/secrets/site.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    server_name *.{{ nginx_proxy_server_name }} {{ nginx_proxy_server_name }};
    {#
    custom nginx server config section
    eg:
    nginx_server_config: |
      if ($allowed_country = no) {
          return 444;
      }
    #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=6, indentfirst=True)  }}
{% endif %}
    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header    X-Forwarded-SSL   on;
    proxy_set_header    X-Forwarded-Proto $scheme;
    ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
    resolver {{ kube_dns_ip }} valid=30s;
    location ~* ^/auth/(.*)/impersonation {
      return 301 {{proto}}://{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/master {
      return 301 {{proto}}://{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/(.+)/token/introspect/ {
          return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
    }
    location ~* ^/auth/realms/(.+)/token/ {
      return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
    }
    location ~* ^/auth/realms/(.+)/userinfo/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
    }
    location ~* ^/auth/realms/(.+)/logout/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
    }
    location ~* ^/auth/realms/(.+)/certs/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
    }
    location ~* ^/auth/realms/(.+)/clients-registrations/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://{{ nginx_proxy_server_name }};
    }

    error_page 404 500 502 503 504 /50x.html;
        location = /50x.html {
                root /usr/share/nginx/html;
                internal;
        }

    location ~* ^/auth/v1/refresh/token  {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /auth/ {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
    }
    # Caching keycloak static assets
    location ~ /auth/resources/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css)) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache proxy_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
  }
    # This is Caching mechanism for POST requests location search
    location ~ /learner/data/v1/location/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    # Caching for content consumption
    location ~ /api/(content/v1/read|course/v1/hierarchy) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for Content search
    location ~ /api/content/v1/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for POST requests
    location ~ /api/org/v1/search|/api/data/v1/(form/read|location/search) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ /api/(framework/v1/read|data/v1/system/settings/get) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
  }

    location /api/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      set $custom_header "";
      if ( $arg_eHVyhwSdt ) {
        set $custom_header "Bearer $arg_eHVyhwSdt";
      }
      if ( $http_authorization ) {
        set $custom_header "$http_authorization";
      }
      proxy_set_header Authorization $custom_header;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /apis/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/apis/(.*) /$1 break;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /protected/v8/resource/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      add_header 'Access-Control-Allow-Origin' '$http_origin' always ;
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS' always;
      add_header 'Access-Control-Max-Age' 1728000;

      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }


    # Oauth2 config
    location /oauth2/ {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host                    $host;
      proxy_set_header X-Real-IP               {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme                $scheme;
      proxy_set_header X-Auth-Request-Redirect $request_uri;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location = /oauth2/auth {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host             $host;
      proxy_set_header X-Real-IP        {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme         $scheme;
      # nginx auth_request includes headers but not body
      proxy_set_header Content-Length   "";
      proxy_pass_request_body           off;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location /grafana/ {
      set $target http://prometheus-operator-grafana.monitoring.svc.cluster.local;
      rewrite ^/grafana/(.*) /$1 break;
      proxy_pass $target;
    }
    location /encryption/ {
    set $target http://encryption.{{ namespace }}.svc.cluster.local;
    rewrite ^/encryption/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 40;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Forwarded-For   $http_x_forwarded_for;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass $target;
    }
    location /badging/ {
      set $target http://badger-service.{{ namespace }}.svc.cluster.local:8004;
      rewrite ^/badging/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 1;
      proxy_send_timeout 30;
      proxy_read_timeout 40;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
  }
   location ~* ^/content/preview/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/v3/preview/$url_full;
  }
   location ~ /content-editor/telemetry|collection-editor/telemetry {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
  location ~* ^/content-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/content-editor/$url_full;
  }
    location ~* ^/collection-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/collection-editor/$url_full;
  }
    location ~* ^/generic-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/generic-editor/$url_full;
  }
  location ~* ^/content-plugins/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $s3_bucket        "{{plugin_upstream_url}}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
        {% if nginx_token_refresh is defined and nginx_token_refresh %}
        access_by_lua_block {
            local dict = ngx.shared.token_cache
            local token = dict:get("gcp_token")

            if token then
                ngx.req.set_header("Authorization", "Bearer " .. token)
            else
                ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
            end
        }
        {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$s3_bucket/content-plugins/$url_full;
  }

    # compression for svg certs download
    location /api/certreg/v2/certs/download {
      rewrite ^/api/(.*) /$1 break;
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   $remote_addr;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /learner/certreg/v2/certs/download {
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location ~ /viewer/video/ {
      rewrite ^/viewer/video/(.*)$ {{proto}}://portal.{{ nginx_proxy_server_name }}/viewer/video/$1 redirect;
    }
    location ~ /viewer/html/ {
      rewrite ^/viewer/html/(.*)$ {{proto}}://portal.{{ nginx_proxy_server_name }}/viewer/html/$1 redirect;
    }
    location ~ /public/toc/ {
      rewrite ^/public/toc/(.*)$ {{proto}}://portal.{{ nginx_proxy_server_name }}/public/toc/$1 redirect;
    }
    location / {
      if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE|PATCH)$) {
       return 405;
      }
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-Content-Type-Options nosniff;
      add_header Referrer-Policy 'strict-origin';
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
      add_header 'Access-Control-Allow-Headers'  'Access-Control-Allow-Headers, Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, x-channel-id, x-app-id, Authorization, auth-token, x-user-id';
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      #proxy_pass http://192.168.3.215:81;
      proxy_pass http://static-domain:80;
    }

     location = /codeanalysis {
      rewrite ^ /codeanalysis/ permanent;
    }
     location ^~ /codeanalysis/ {
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Server  $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Real-IP           $remote_addr;
      proxy_redirect                       off;
      proxy_buffering                      off;
      client_max_body_size                 1226M;
      client_body_buffer_size              128k;
      proxy_pass http://10.175.2.49:9000;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }
    location /v3/device/register {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/v3/device/register/(.*) /v3/device/register/$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
    }
    location /action/data/v3/metrics {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/action/data/v3/metrics/(.*) /data/v3/metrics/$1 break;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
    }
    location  ~ /resourcebundles/v1/read|/learner/data/v1/(role/read|system/settings/get)|/v1/tenant/info  {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location /api/channel/v1/read {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/channel/v1/read/(.*) /channel/v1/read/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ ^/chatapi/ {
      set $target http://router-service.{{ namespace }}.svc.cluster.local:8000;
      rewrite ^/chatapi/(.*) /$1 break;
      proxy_pass $target;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
    }
    location /oauth2callback {
      return 200 'OK';
      add_header Content-Type text/plain;
    }
    {# Including custom configuration #}
    {{ proxy_custom_config }}

    client_max_body_size 1226M;

    }

  server {
    if ($host = spv.{{ nginx_proxy_server_name }}) {
        return 301 https://$host$request_uri;
        }

      listen       80;
      server_name  spv.{{ nginx_proxy_server_name }};
      return 404;
    }

   server {
    listen                443 ssl;
    ssl_certificate       /etc/secrets/site.crt;
    ssl_certificate_key   /etc/secrets/site.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    server_name *.spv.{{ nginx_proxy_server_name }} spv.{{ nginx_proxy_server_name }};
    {#
    custom nginx server config section
    eg:
    nginx_server_config: |
      if ($allowed_country = no) {
          return 444;
      }
    #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=6, indentfirst=True)  }}
{% endif %}
    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header    X-Forwarded-SSL   on;
    proxy_set_header    X-Forwarded-Proto $scheme;
    ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
    resolver {{ kube_dns_ip }} valid=30s;
    location ~* ^/auth/(.*)/impersonation {
      return 301 {{proto}}://spv.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/master {
      return 301 {{proto}}://spv.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://spv.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/(.+)/token/introspect/ {
          return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
    }
    location ~* ^/auth/realms/(.+)/token/ {
      return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
    }
    location ~* ^/auth/realms/(.+)/userinfo/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
    }
    location ~* ^/auth/realms/(.+)/logout/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
    }
    location ~* ^/auth/realms/(.+)/certs/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
    }
    location ~* ^/auth/realms/(.+)/clients-registrations/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://spv.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/v1/refresh/token  {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /auth/ {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
    }
    # Caching keycloak static assets
    location ~ /auth/resources/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css)) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache proxy_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
  }
    # This is Caching mechanism for POST requests location search
    location ~ /learner/data/v1/location/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    # Caching for content consumption
    location ~ /api/(content/v1/read|course/v1/hierarchy) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for Content search
    location ~ /api/content/v1/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for POST requests
    location ~ /api/org/v1/search|/api/data/v1/(form/read|location/search) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ /api/(framework/v1/read|data/v1/system/settings/get) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
  }

    location /api/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      set $custom_header "";
      if ( $arg_eHVyhwSdt ) {
        set $custom_header "Bearer $arg_eHVyhwSdt";
      }
      if ( $http_authorization ) {
        set $custom_header "$http_authorization";
      }
      proxy_set_header Authorization $custom_header;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /apis/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/apis/(.*) /$1 break;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /protected/v8/resource/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    # Oauth2 config
    location /oauth2/ {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host                    $host;
      proxy_set_header X-Real-IP               {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme                $scheme;
      proxy_set_header X-Auth-Request-Redirect $request_uri;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location = /oauth2/auth {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host             $host;
      proxy_set_header X-Real-IP        {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme         $scheme;
      # nginx auth_request includes headers but not body
      proxy_set_header Content-Length   "";
      proxy_pass_request_body           off;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location /grafana/ {
      set $target http://prometheus-operator-grafana.monitoring.svc.cluster.local;
      rewrite ^/grafana/(.*) /$1 break;
      proxy_pass $target;
    }
    location /encryption/ {
    set $target http://encryption.{{ namespace }}.svc.cluster.local;
    rewrite ^/encryption/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 40;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Forwarded-For   $http_x_forwarded_for;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass $target;
    }
    location /badging/ {
      set $target http://badger-service.{{ namespace }}.svc.cluster.local:8004;
      rewrite ^/badging/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 1;
      proxy_send_timeout 30;
      proxy_read_timeout 40;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
  }
    location /discussions/ {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      # Socket.IO Support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      set $target http://nodebb-service.{{ namespace }}.svc.cluster.local:4567;
      #rewrite ^/discussions/(.*) /$1 break;
      proxy_pass $target;
  }
   location ~* ^/content/preview/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/v3/preview/$url_full;
  }
   location ~ /content-editor/telemetry|collection-editor/telemetry {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
  location ~* ^/content-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/content-editor/$url_full;
  }
    location ~* ^/collection-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/collection-editor/$url_full;
  }
    location ~* ^/generic-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/generic-editor/$url_full;
  }
  location ~* ^/content-plugins/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $s3_bucket        "{{plugin_upstream_url}}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
          {% if nginx_token_refresh is defined and nginx_token_refresh %}
          access_by_lua_block {
              local dict = ngx.shared.token_cache
              local token = dict:get("gcp_token")

              if token then
                  ngx.req.set_header("Authorization", "Bearer " .. token)
              else
                  ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
              end
          }
          {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$s3_bucket/content-plugins/$url_full;
  }
    location /thirdparty {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
  location ~* ^/desktop/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $offline_bucket        "{{ sunbird_offline_azure_storage_account_url }}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{sunbird_offline_azure_storage_account_url.split('/')[0]|lower}}";
        {% if nginx_token_refresh is defined and nginx_token_refresh %}
        access_by_lua_block {
            local dict = ngx.shared.token_cache
            local token = dict:get("gcp_token")

            if token then
                ngx.req.set_header("Authorization", "Bearer " .. token)
            else
                ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
            end
        }
        {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$offline_bucket/$url_full;
  }
    # compression for svg certs download
    location /api/certreg/v2/certs/download {
      rewrite ^/api/(.*) /$1 break;
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   $remote_addr;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /learner/certreg/v2/certs/download {
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location / {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-spv-igot;
    }

    location /validation/ {
     proxy_set_header Host $host;
     proxy_set_header X-Real-IP $remote_addr;
     proxy_set_header X-Scheme $scheme;
     proxy_connect_timeout 5;
     proxy_send_timeout 60;
     proxy_read_timeout 70;
     proxy_set_header    X-Forwarded-Proto $scheme;
     proxy_set_header Connection "";
     proxy_http_version 1.1;
     proxy_set_header X-Request-ID $sb_request_id;
     rewrite ^/validation/(.*) /$1 break;
     proxy_pass http://ml-template-validation-portal-service:3111;
    }
    location /v3/device/register {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/v3/device/register/(.*) /v3/device/register/$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
    }
    location /action/data/v3/metrics {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/action/data/v3/metrics/(.*) /data/v3/metrics/$1 break;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
    }
    location  ~ /resourcebundles/v1/read|/learner/data/v1/(role/read|system/settings/get)|/v1/tenant/info  {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location /api/channel/v1/read {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/channel/v1/read/(.*) /channel/v1/read/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ ^/chatapi/ {
      set $target http://router-service.{{ namespace }}.svc.cluster.local:8000;
      rewrite ^/chatapi/(.*) /$1 break;
      proxy_pass $target;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
    }
    location /oauth2callback {
      return 200 'OK';
      add_header Content-Type text/plain;
    }
    {# Including custom configuration #}
    {{ proxy_custom_config }}

    client_max_body_size 1226M;

    }


  server {
    if ($host = mdo.{{ nginx_proxy_server_name }}) {
        return 301 https://$host$request_uri;
        }

      listen       80;
      server_name  mdo.{{ nginx_proxy_server_name }};
      return 404;
    }

  server {
    listen                443 ssl;
    ssl_certificate       /etc/secrets/site.crt;
    ssl_certificate_key   /etc/secrets/site.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    server_name *.mdo.{{ nginx_proxy_server_name }} mdo.{{ nginx_proxy_server_name }};
    {#
    custom nginx server config section
    eg:
    nginx_server_config: |
      if ($allowed_country = no) {
          return 444;
      }
    #}
{% if nginx_server_config is defined and nginx_server_config %}
  {{ nginx_server_config | indent( width=6, indentfirst=True)  }}
{% endif %}
    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header    X-Forwarded-SSL   on;
    proxy_set_header    X-Forwarded-Proto $scheme;
    ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
    resolver {{ kube_dns_ip }} valid=30s;
    location ~* ^/auth/(.*)/impersonation {
      return 301 {{proto}}://mdo.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/master {
      return 301 {{proto}}://mdo.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://mdo.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/(.+)/token/introspect/ {
          return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
    }
    location ~* ^/auth/realms/(.+)/token/ {
      return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
    }
    location ~* ^/auth/realms/(.+)/userinfo/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
    }
    location ~* ^/auth/realms/(.+)/logout/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
    }
    location ~* ^/auth/realms/(.+)/certs/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
    }
    location ~* ^/auth/realms/(.+)/clients-registrations/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://mdo.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/v1/refresh/token  {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /auth/ {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
    }
    # Caching keycloak static assets
    location ~ /auth/resources/(.+\.(png|svg|ico|js|eot|ttf|woff|woff2|css)) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache proxy_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://keycloak;
  }
    # This is Caching mechanism for POST requests location search
    location ~ /learner/data/v1/location/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    # Caching for content consumption
    location ~ /api/(content/v1/read|course/v1/hierarchy) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for Content search
    location ~ /api/content/v1/search {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache content_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 14400s;
      # Increasing the proxy buffer size
      proxy_buffer_size 16k;
      proxy_busy_buffers_size 16k;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_pass http://kong;
    }
    # This is Caching mechanism for POST requests
    location ~ /api/org/v1/search|/api/data/v1/(form/read|location/search) {
      # Enabling caching
      proxy_cache_key "$request_uri|$request_body";
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_methods GET HEAD POST;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ /api/(framework/v1/read|data/v1/system/settings/get) {
      # Enabling caching
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
  }

    location /api/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      set $custom_header "";
      if ( $arg_eHVyhwSdt ) {
        set $custom_header "Bearer $arg_eHVyhwSdt";
      }
      if ( $http_authorization ) {
        set $custom_header "$http_authorization";
      }
      proxy_set_header Authorization $custom_header;
      rewrite ^/api/(.*) /$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /apis/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, locale";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      rewrite ^/apis/(.*) /$1 break;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /protected/v8/resource/ {
      if ($request_method = OPTIONS ) {
              add_header Access-Control-Allow-Origin "*" ;
              add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
              add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id, Content-Encoding, rootorg, org, wid, hostpath";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
      }
      # add_header Access-Control-Allow-Origin "*";
      # add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
      proxy_cookie_path ~*^/.* /;
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_pass http://ui-proxies:3003;
      proxy_connect_timeout 10;
      proxy_send_timeout 300;
      proxy_read_timeout 300;
    }

    location /nodebb/ {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      set $target http://10.0.0.12:4567;
      proxy_pass $target;
    }
    # Oauth2 config
    location /oauth2/ {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host                    $host;
      proxy_set_header X-Real-IP               {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme                $scheme;
      proxy_set_header X-Auth-Request-Redirect $request_uri;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location = /oauth2/auth {
      set $target http://oauth2-proxy.logging.svc.cluster.local;
      proxy_set_header Host             $host;
      proxy_set_header X-Real-IP        {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme         $scheme;
      # nginx auth_request includes headers but not body
      proxy_set_header Content-Length   "";
      proxy_pass_request_body           off;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
    }
    location /grafana/ {
      set $target http://prometheus-operator-grafana.monitoring.svc.cluster.local;
      rewrite ^/grafana/(.*) /$1 break;
      proxy_pass $target;
    }
    location /encryption/ {
    set $target http://encryption.{{ namespace }}.svc.cluster.local;
    rewrite ^/encryption/(.*) /$1 break;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header X-Scheme $scheme;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 40;
    proxy_set_header    X-Forwarded-Proto $scheme;
    proxy_set_header    X-Forwarded-For   $http_x_forwarded_for;
    proxy_set_header X-Request-ID $sb_request_id;
    proxy_pass $target;
    }
    location /badging/ {
      set $target http://badger-service.{{ namespace }}.svc.cluster.local:8004;
      rewrite ^/badging/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 1;
      proxy_send_timeout 30;
      proxy_read_timeout 40;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
  }
    location /discussions/ {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_redirect off;
      # Socket.IO Support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      set $target http://nodebb-service.{{ namespace }}.svc.cluster.local:4567;
      #rewrite ^/discussions/(.*) /$1 break;
      proxy_pass $target;
  }

   location ~* ^/content/preview/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/v3/preview/$url_full;
  }
   location ~ /content-editor/telemetry|collection-editor/telemetry {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
  location ~* ^/content-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/content-editor/$url_full;
  }
    location ~* ^/collection-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/collection-editor/$url_full;
  }
    location ~* ^/generic-editor/(.*) {
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
      set $s3_bucket        "{{plugin_upstream_url}}";
      set $url_full         '$1';
      proxy_http_version     1.1;
      proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
      proxy_set_header       Authorization '';
      {% endif %}
      proxy_hide_header      Access-Control-Allow-Origin;
      proxy_hide_header      Access-Control-Allow-Methods;
      proxy_hide_header      x-amz-id-2;
      proxy_hide_header      x-amz-request-id;
      proxy_hide_header      Set-Cookie;
      proxy_ignore_headers   "Set-Cookie";
      proxy_buffering        off;
      proxy_intercept_errors on;
      add_header             Access-Control-Allow-Origin "*" ;
      add_header             Access-Control-Allow-Methods GET;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass             https://$s3_bucket/generic-editor/$url_full;
  }
  location ~* ^/content-plugins/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $s3_bucket        "{{plugin_upstream_url}}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{plugin_upstream_url.split('/')[0]|lower}}";
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      access_by_lua_block {
          local dict = ngx.shared.token_cache
          local token = dict:get("gcp_token")

          if token then
              ngx.req.set_header("Authorization", "Bearer " .. token)
          else
              ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
          end
      }
      {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$s3_bucket/content-plugins/$url_full;
  }
    location /thirdparty {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
  location ~* ^/desktop/(.*) {
          # Enabling cache for Response code 200
          expires 1M;
          add_header Pragma public;
          add_header Cache-Control "public";
          # Enabling compression
          gzip            on;
          gzip_min_length 100000;
          gzip_proxied    expired no-cache no-store private auth;
          gzip_types application/javascript application/x-javascript text/css text/javascript;
          if ($request_method = OPTIONS ) {
                  add_header Access-Control-Allow-Origin "*" ;
                  add_header Access-Control-Allow-Methods "GET, OPTIONS, PATCH, POST";
                  add_header Access-Control-Allow-Headers "Access-Control-Allow-Origin, Authorization, Content-Type, user-id";
                  # add_header Access-Control-Allow-Credentials "true";
                  add_header Content-Length 0;
                  add_header Content-Type text/plain;
                  return 200;
          }
         set $offline_bucket        "{{ sunbird_offline_azure_storage_account_url }}";
         set $url_full         '$1';
         proxy_http_version     1.1;
         proxy_set_header       Host "{{sunbird_offline_azure_storage_account_url.split('/')[0]|lower}}";
        {% if nginx_token_refresh is defined and nginx_token_refresh %}
        access_by_lua_block {
            local dict = ngx.shared.token_cache
            local token = dict:get("gcp_token")

            if token then
                ngx.req.set_header("Authorization", "Bearer " .. token)
            else
                ngx.log(ngx.ERR, "Failed to retrieve token from shared dictionary")
            end
        }
        {% else %}
         proxy_set_header       Authorization '';
         {% endif %}
         proxy_hide_header      Access-Control-Allow-Origin;
         proxy_hide_header      Access-Control-Allow-Methods;
         proxy_hide_header      x-amz-id-2;
         proxy_hide_header      x-amz-request-id;
         proxy_hide_header      Set-Cookie;
         proxy_ignore_headers   "Set-Cookie";
         proxy_buffering        off;
         proxy_intercept_errors on;
         add_header             Access-Control-Allow-Origin "*";
         add_header             Access-Control-Allow-Methods GET;
         proxy_set_header X-Request-ID $sb_request_id;
         proxy_pass             https://$offline_bucket/$url_full;
  }
    # compression for svg certs download
    location /api/certreg/v2/certs/download {
      rewrite ^/api/(.*) /$1 break;
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   $remote_addr;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location /learner/certreg/v2/certs/download {
      # Compression
      gzip on;
      gzip_comp_level    5;
      gzip_min_length    50000; # 50KB
      gzip_proxied       any;
      gzip_vary          on;
      # Content types for compression
      gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      add_header test hello;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location / {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-mdo-igot;
    }
    location /v3/device/register {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/v3/device/register/(.*) /v3/device/register/$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
    }
    location /action/data/v3/metrics {
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
      proxy_set_header Connection "";
      rewrite ^/action/data/v3/metrics/(.*) /data/v3/metrics/$1 break;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
    }
    location  ~ /resourcebundles/v1/read|/learner/data/v1/(role/read|system/settings/get)|/v1/tenant/info  {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://ui-cbp-igot;
    }
    location /api/channel/v1/read {
      proxy_cache_key $proxy_host$request_uri;
      proxy_cache framework_cache;
      add_header X-Proxy-Cache $upstream_cache_status;
      add_header X-Proxy-Cache-Date $upstream_http_date;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      proxy_cache_revalidate on;
      proxy_cache_background_update on;
      proxy_cache_lock on;
      proxy_cache_valid 200 43200;
      rewrite ^/api/channel/v1/read/(.*) /channel/v1/read/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header    X-Forwarded-For   {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~ ^/chatapi/ {
      set $target http://router-service.{{ namespace }}.svc.cluster.local:8000;
      rewrite ^/chatapi/(.*) /$1 break;
      proxy_pass $target;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
    }
    location /oauth2callback {
      return 200 'OK';
      add_header Content-Type text/plain;
    }
    {# Including custom configuration #}
    {{ proxy_custom_config }}

    client_max_body_size 1226M;

    }

nginxconfig: |
  user  nginx;
  worker_processes  {{nginx_worker_processes | d("auto")}};
  {#
  Can add custom modules like
  eg:
  nginx_modules: |
      load_module modules/ngx_http_geoip2_module.so;
      load_module modules/ngx_stream_geoip2_module.so;
  #}
{% if nginx_modules is defined and nginx_modules %}
  {{ nginx_modules | indent( width=2, indentfirst=True)  }}
{% endif %}
  error_log  /var/log/nginx/error.log warn;
  pid        /var/run/nginx.pid;
  events {
      worker_connections  10000;
  }
  http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      resolver {{ kube_dns_ip }} valid=30s;
      #commenting these security headers because of duplicate headers from apimanager
      #add_header X-Frame-Options "SAMEORIGIN";
      #add_header Strict-Transport-Security max-age=31536000;
      #add_header X-Content-Type-Options nosniff;
      #add_header X-XSS-Protection "1; mode=block" always;

      #dont add this add_header Content-Security-Policy "default-src 'self'; font-src *;img-src * data:; script-src *; style-src *";
      #add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
      add_header Referrer-Policy "strict-origin";
      add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()";
      add_header Cache-Control "max-age=0";

      server_tokens off;
      {#
      This is to define custom nginx_http_configs
      for example
      nginx_http_config: |
        geoip2 /usr/local/share/GeoLite2-Country.mmdb {
            $geoip2_data_country_iso_code country iso_code;
        }
        map $geoip2_data_country_iso_code $allowed_country {
        default no;
            IN  no;
        }
      #}
{% if nginx_http_config is defined and nginx_http_config %}
  {{ nginx_http_config | indent( width=7, indentfirst=True)  }}
{% endif %}
      lua_load_resty_core off;
      log_format  main  '{{ nginx_client_public_ip_header | d('$remote_addr') }} - $remote_user [$time_local] '
                        '"$request" $status $request_length $body_bytes_sent'
                        ' $request_time $upstream_response_time $pipe'
                        ' "$http_referer" "$http_user_agent" "$sb_request_id"'
                        ' "$http_x_device_id" "$http_x_channel_id" "$http_x_app_id"'
                        ' "$http_x_app_ver" "$http_x_session_id"';
      access_log  /var/log/nginx/access.log  main;
      # Shared dictionary to store metrics
      lua_shared_dict prometheus_metrics 100M;
      {% if nginx_token_refresh is defined and nginx_token_refresh %}
      lua_shared_dict token_cache 10m;
      {% endif %}
      lua_package_path "/etc/nginx/lua_modules/?.lua";
      # Defining request_id
      # If the client send request_id it should be preffered over the default one
      map $http_x_request_id $sb_request_id {
        default  $http_x_request_id;
        ''  $request_id;
      }
      # Defining upstream cache status for nginx metrics
      map $upstream_cache_status $cache_status {
        default  $upstream_cache_status;
        ''       "NONE";
      }
      # Defining metrics
      init_worker_by_lua_block {
        prometheus = require("prometheus").init("prometheus_metrics")
        metric_requests = prometheus:counter(
          "nginx_http_requests_total", "Number of HTTP requests", {"host", "status", "request_method", "cache_status"})
        metric_latency = prometheus:histogram(
          "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
        metric_connections = prometheus:gauge(
          "nginx_http_connections", "Number of HTTP connections", {"state"})
        {% if nginx_token_refresh is defined and nginx_token_refresh %}
        local update_interval = 600 -- 1 minutes in seconds
        local gcp_token_key = "gcp_token"
        local token_file_path = "/etc/nginx/token/token.txt"

        local function update_gcp_token()
            local file = io.open(token_file_path, "r")
            if file then
                local token = file:read("*a")
                file:close()

                local dict = ngx.shared.token_cache
                dict:set(gcp_token_key, token)
            else
                ngx.log(ngx.ERR, "Failed to open token file")
            end
        end

        -- Initial token read
        update_gcp_token()

        local function periodic_update()
            while true do
                ngx.sleep(update_interval)
                update_gcp_token()
            end
        end

        ngx.timer.at(0, periodic_update)
        {% endif %}
      }
      log_by_lua_block {
        metric_requests:inc(1, {ngx.var.server_name, ngx.var.status, ngx.var.request_method, ngx.var.cache_status })
        metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
      }
      header_filter_by_lua_block {
       ngx.header["server"] = nil
      }

      sendfile        on;
      #tcp_nopush     on;
      client_max_body_size 1226M;
      keepalive_timeout  65s;
      keepalive_requests 200;
      # Nginx connection limit per ip
      limit_conn_zone $binary_remote_addr zone=limitbyaddr:10m;
      limit_conn_status 429;
      upstream kong {
          server kong:8000;
          keepalive 1000;
      }
      #upstream encryption {
      #    server enc-service:8013;
      #    keepalive 1000;
      #}
      upstream keycloak {
          server {{ keycloak_url.split('//')[-1] }};
          keepalive 1000;
      }
      upstream ui-static {
          server ui-static:3002;
          keepalive 1000;
      }

      upstream ui-cbp-igot {
          server ui-cbp-igot:3002;
          keepalive 1000;
      }
      upstream  ui-spv-igot {
          server ui-spv-igot:3002;
          keepalive 1000;
      }
      upstream ui-mdo-igot {
          server ui-mdo-igot:3002;
          keepalive 1000;
      }

      include /etc/nginx/defaults.d/*.conf;
      include /etc/nginx/conf.d/*.conf;
      #################
      # Caching Block #
      #################
      #
      # Keywords
      #
      # proxy_cache_path: path to store the cache content
      # level: how many directories we need, 1:2 means 1 parent directory, and another child directory before the cache content.
      # keys_zone: name of the cache and size of the keys store in RAM; 1‑MB zone can store data for about 8,000 keys
      # max_size: size of the cache content in disk
      # inactive: specifies how long an item can remain in the cache without being accessed. This doesn't value expiry time of cache. So keep it more than the expiry.
      # use_temp_path: do we have to write the cache to a temp path first? This will reduce the performance.
      #
      # caching for images and files
      proxy_cache_path /tmp/proxy_cache levels=1:2 keys_zone=tmp_cache:5m max_size=10m inactive=300m use_temp_path=off;
      # caching for apis
      proxy_cache_path /tmp/api_cache levels=1:2 keys_zone=proxy_cache:5m max_size=600m inactive=1400m use_temp_path=off;
      # cache framework
      proxy_cache_path /tmp/framework_cache levels=1:2 keys_zone=framework_cache:5m max_size=700m inactive=300m use_temp_path=off;
      # cache content
      proxy_cache_path /tmp/content_cache levels=1:2 keys_zone=content_cache:100m max_size=3000m inactive=600m use_temp_path=off;
      # cache content metadata
      proxy_cache_path /tmp/content_metadata levels=1:2 keys_zone=content_metadata:100m max_size=1000m inactive=300m use_temp_path=off;
      proxy_cache_path /tmp/ratings_cache levels=1:2 keys_zone=ratings_cache:100m max_size=3000m inactive=600m use_temp_path=off;

     server {
       listen 9145;
       location /metrics {
         content_by_lua_block {
            metric_connections:set(ngx.var.connections_reading, {"reading"})
            metric_connections:set(ngx.var.connections_waiting, {"waiting"})
            metric_connections:set(ngx.var.connections_writing, {"writing"})
            prometheus:collect()
          }
       }
     }
  }

keycloakconf: |
  server {
    listen 80;
    listen [::]:80;
    server_name {{ merge_proxy_server_name }};
    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    return 301 https://{{ merge_proxy_server_name }}$request_uri;
  }
  server {
    listen                443 ssl;
    ssl_certificate       /etc/secrets-merge/tls.crt;
    ssl_certificate_key   /etc/secrets-merge/tls.key;
    server_name           {{ merge_proxy_server_name }};
    # Limitting open connection per ip
    limit_conn limitbyaddr {{ nginx_per_ip_connection_limit }};
    proxy_set_header    Host              $host;
    proxy_set_header    X-Real-IP         {{ nginx_client_public_ip_header | d('$remote_addr') }};
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header    X-Forwarded-SSL   on;
    proxy_set_header    X-Forwarded-Proto $scheme;
    ignore_invalid_headers off;  #pass through headers from Jenkins which are considered invalid by Nginx server.
    resolver 127.0.0.11 valid=5s;
    location ~* ^/auth/(.*)/impersonation {
      return 301 {{proto}}://portal.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/master {
      return 301 {{proto}}://portal.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://portal.{{ nginx_proxy_server_name }};
    }
    location ~* ^/auth/realms/(.+)/token/introspect/ {
          return 301 {{proto}}://$host/api/auth/v1/realms/$1/token/introspect;
    }
    location ~* ^/auth/realms/(.+)/token/ {
      return 301  {{proto}}://$host/api/auth/v1/realms/$1/token/;
    }
    location ~* ^/auth/realms/(.+)/userinfo/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/userinfo/;
    }
    location ~* ^/auth/realms/(.+)/logout/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/logout/;
    }
    location ~* ^/auth/realms/(.+)/certs/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/certs/;
    }
    location ~* ^/auth/realms/(.+)/clients-registrations/ {
      return 301 {{proto}}://$host/api/auth/v1/realms/$1/clients-registrations/;
    }
    location ~* ^/auth/v1/refresh/token  {
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass http://kong;
    }
    location ~* ^/auth/admin/master/console/ {
      return 301 {{proto}}://{{ merge_proxy_server_name }};
    }
    location /auth/ {
      set $target {{ keycloak_url }};
      rewrite ^/auth/(.*) /auth/$1 break;
      proxy_set_header X-Request-ID $sb_request_id;
      proxy_pass $target;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
    location / {
      rewrite ^/(.*) /$1 break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP {{ nginx_client_public_ip_header | d('$remote_addr') }};
      proxy_set_header X-Scheme $scheme;
      proxy_connect_timeout 5;
      proxy_send_timeout 60;
      proxy_read_timeout 70;
      proxy_set_header    X-Forwarded-Proto $scheme;
      proxy_set_header Connection "";
      proxy_http_version 1.1;
      proxy_set_header X-Request-ID $request_id;
      proxy_pass http://ui-static;
    }
  }
compressionConfig: |-
  # Compression
  gzip on;
  gzip_comp_level    5;
  gzip_min_length    256; # 256Bytes
  gzip_proxied       any;
  gzip_vary          on;
  # Content types for compression
  gzip_types
  application/atom+xml
  application/javascript
  application/json
  application/ld+json
  application/manifest+json
  application/rss+xml
  application/vnd.geo+json
  application/vnd.ms-fontobject
  application/x-font-ttf
  application/x-web-app-manifest+json
  application/xhtml+xml
  application/xml
  font/opentype
  image/bmp
  image/svg+xml
  image/x-icon
  text/cache-manifest
  text/css
  text/plain
  ;
serviceMonitor:
  enabled: true
  labels: # labels with which the prometheus choose the serviceMonitor
    app: prometheus-operator
    release: prometheus-operator

{# Add the apple site association json contents in a single line within single quotes as shown below in Core/common.yml  #}
{# apple_app_site_association: '{"applinks":{"apps":[],"details":[{"appID":"123456.dev.sunbird.app","paths":["/explore","/dial/*","/get/dial","/play/content","/play/collection","/learn/course","/explore-course/course","/explore-course","/search","/search/Library","/faq","/profile","/play/quiz","/explore","/learn","/resources"]}]}}' #}
searchbycompetencyapi_response_json: |
  {{ searchbycompetencyapi_response_json | default("") }}
